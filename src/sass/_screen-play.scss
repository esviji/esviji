/* ********************************************************************
 * Play screen
 * ********************************************************************/

// A few variables
$margins: 3vmin;
$headerSize: 20vmin;
$fixedHeaderSize: 15 / 24 * 20vh;
$lineHeight: 1.5;
$boardRatio: 430 / 320;
$portraitSvgHeight: (100 * $boardRatio) * 1vw;
$landscapeSvgWith: (100 / $boardRatio) * 1vh;

// Calculated variables
$headerHeight: $headerSize * $lineHeight;
$fixedHeaderHeight: $fixedHeaderSize * $lineHeight;

#play {
  // default layout (mobile first)
  font-size: 15vmin;
  line-height: $lineHeight;

  h1,
  ul,
  .score,
  .level,
  .lives {
    margin: 0;
    padding: 0;
  }

  h1 {
    font-size: $headerSize;
    color: #ccc;
    padding: 0 $margins;
    height: $headerHeight;
  }

  .progress {
    position: absolute;
    top: $headerHeight;
    left: 0;
    width: 100vw;
    height: calc(100vh - #{$headerHeight} - #{$portraitSvgHeight}); // TODO: ?

    display: flex;
    flex-direction: column;
    justify-content: space-around;

    .score {
      padding: 0 $margins;
      font-size: 1.5em;
      text-align: center;
    }

    ul {
      width: 100%;
      list-style-type: none;

      display: flex;
      flex-direction: column;
      justify-content: space-around;

      color: #ccc;

      li {
        text-align: center;
      }

      span {
        color: #eee;
      }
    }

    .icon {
      margin-right: $margins;
      width: 0.75em;
      height: 0.75em;
    }
  }

  .score,
  .lives,
  .level {
    display: inline-block;
    transition-property: color, transform;
    transition-duration: 0.5s;
    transition-timing-function: ease-in-out;

    &.changeDown {
      color: $badColor;
      transform: scale(1.2);
    }

    &.changeUp {
      color: $goodColor;
      transform: scale(1.2);
    }
  }

  svg#board {
    position: absolute;
    left: 0;
    bottom: 0;
    width: 100vw;
    height: $portraitSvgHeight;
    pointer-events: none;

    path {
      pointer-events: visibleFill;
    }

    .playzone {
      stroke-width: 0;
      fill: #777;
    }

    #playable,
    #playableSpring {
      pointer-events: none;

      &:hover {
        cursor: pointer;
      }

      &.throwable {
        animation-delay: 0;
        animation-duration: 0.7s;
        animation-timing-function: ease-in-out;
        animation-iteration-count: infinite;
      }
    }

    #playable {
      transform-origin: 294px center;

      &.throwable {
        animation-name: ballAnimation;
      }
    }

    #playableSpring {
      stroke-width: 2;
      stroke: #cee;
      fill: none;
      transform-origin: 308px center;
      transform: scaleX(0.5);

      &.throwable {
        animation-name: springAnimation;
      }
    }
  }

  .controls {
    position: static;

    .pause {
      position: absolute;
      top: $margins;
      bottom: auto;
      left: auto;
      right: $margins;
      width: $headerSize;
      height: $headerSize;

      svg {
        width: 100%;
        height: 100%;
      }
    }
  }

  // Portrait mode above 8/24
  @media (min-aspect-ratio: 8/24) {
    .progress ul {
      flex-direction: row;
    }
  }

  // Portrait mode above 11/24
  @media (min-aspect-ratio: 11/24) {
    font-size: 10vmin;

    .progress {
      ul {
        position: absolute;
        left: $margins;
        width: 25vw;

        flex-direction: column;

        li {
          text-align: left;
        }
      }
    }
  }

  // Portrait mode above 13/24
  @media (min-aspect-ratio: 13/24) {
    font-size: calc(13 / 24 * 10vh - 2vw);

    .progress {
      position: absolute;
      left: $margins;
      width: calc(100vw - #{$margins});

      // because of https://github.com/rodneyrehm/viewport-units-buggyfill/issues/13#issuecomment-74841617 ?
      height: auto !important;

      .score {
        padding: 0;
        text-align: left;
      }

      ul {
        position: static;
        line-height: 1.2;

        li {
          text-align: left;
        }
      }
    }
  }

  // Portrait mode above 15/24
  @media (min-aspect-ratio: 15/24) {
    h1 {
      font-size: $fixedHeaderSize;
      height: $fixedHeaderHeight;
    }

    svg#board {
      width: 15 / 24 * 100vh;
      height: $boardRatio * 15 / 24 * 100vh;
      left: auto;
      right: 0;
    }

    .progress {
      font-size: 6vw;
    }

    .controls .pause {
      width: $fixedHeaderSize;
      height: $fixedHeaderSize;
    }
  }

  // Portrait mode above 19/24
  @media (min-aspect-ratio: 19/24) {
    svg#board {
      width: 19 / 24 * 100vw;
      max-width: $landscapeSvgWith;
      height: $boardRatio * 19 / 24 * 100vw;
      max-height: $boardRatio * $landscapeSvgWith;
    }

    .progress {
      top: calc(#{$fixedHeaderHeight} + #{$margins});
      width: calc(100vw - #{$margins} - 19 / 24 * 100vw);

      ul {
        width: 100%;
      }
    }

    .controls .pause {
      // https://github.com/rodneyrehm/viewport-units-buggyfill/issues/13#issuecomment-74841617
      top: auto !important;
      left: $margins;
      right: auto;
      bottom: $margins;
    }
  }

  // Above 24/24, landscape mode
  @media (min-aspect-ratio: 24/24) {
    .progress {
      width: calc(100vw - 2 * #{$margins} - #{$landscapeSvgWith});
      height: calc(
        100vh - #{$fixedHeaderHeight} - 3 * #{$margins} - #{$fixedHeaderSize}
      ); // TODO: ?
      ul li {
        text-align: center;
      }
      .score {
        text-align: center;
      }
    }
  }

  // Landscape mode above 36/24
  @media (min-aspect-ratio: 36/24) {
    max-width: 150vh;

    svg#board {
      width: 1 / $boardRatio * 100vh;
      height: 100vh;
    }

    .progress {
      width: calc(150vh - 2 * #{$margins} - #{$landscapeSvgWith});
      font-size: 9vh;
    }
  }
}

@keyframes ballAnimation {
  0% {
    transform: translateX(0);
  }
  50% {
    transform: translateX(-16px);
  }
  100% {
    transform: translateX(0);
  }
}

@keyframes springAnimation {
  0% {
    transform: scaleX(0.5);
  }
  50% {
    transform: scaleX(1);
  }
  100% {
    transform: scaleX(0.5);
  }
}
